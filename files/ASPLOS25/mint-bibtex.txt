@inproceedings{Mint2025Asplos,
author = {Huang, Haiyu and Chen, Cheng and Chen, Kunyi and Chen, Pengfei and Yu, Guangba and He, Zilong and Wang, Yilun and Zhang, Huxing and Zhou, Qi},
title = {Mint: Cost-Efficient Tracing with All Requests Collection via Commonality and Variability Analysis},
year = {2025},
isbn = {9798400706981},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3669940.3707287},
doi = {10.1145/3669940.3707287},
abstract = {Distributed traces contain valuable information but are often massive in volume, posing a core challenge in tracing framework design: balancing the tradeoff between preserving essential trace information and reducing trace volume. To address this tradeoff, previous approaches typically used a '1 or 0' sampling strategy: retaining sampled traces while completely discarding unsampled ones. However, based on an empirical study on real-world production traces, we discover that the '1 or 0' strategy actually fails to effectively balance this tradeoff.To achieve a more balanced outcome, we shift the strategy from the '1 or 0' paradigm to the 'commonality + variability' paradigm. The core of 'commonality + variability' paradigm is to first parse traces into common patterns and variable parameters, then aggregate the patterns and filter the parameters. We propose a cost-efficient tracing framework, Mint, which implements the 'commonality + variability' paradigm on the agent side to enable all requests capturing. Our experiments show that Mint can capture all traces and retain more trace information while optimizing trace storage (reduced to an average of 2.7\%) and network overhead (reduced to an average of 4.2\%). Moreover, experiments also demonstrate that Mint is lightweight enough for production use.},
booktitle = {Proceedings of the 30th ACM International Conference on Architectural Support for Programming Languages and Operating Systems, Volume 1},
pages = {683â€“697},
numpages = {15},
keywords = {cheng chen, guangba yu, haiyu huang, huxing zhang, kunyi chen, pengfei chen, qi zhou., yilun wang, zilong he},
location = {Rotterdam, Netherlands},
series = {ASPLOS '25}
}